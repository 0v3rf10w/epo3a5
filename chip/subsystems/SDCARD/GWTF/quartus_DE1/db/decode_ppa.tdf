--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1001w[3..0]	: WIRE;
	w_anode1013w[1..0]	: WIRE;
	w_anode1020w[3..0]	: WIRE;
	w_anode1031w[3..0]	: WIRE;
	w_anode1041w[3..0]	: WIRE;
	w_anode1051w[3..0]	: WIRE;
	w_anode1061w[3..0]	: WIRE;
	w_anode1071w[3..0]	: WIRE;
	w_anode1081w[3..0]	: WIRE;
	w_anode1091w[3..0]	: WIRE;
	w_anode915w[1..0]	: WIRE;
	w_anode924w[3..0]	: WIRE;
	w_anode941w[3..0]	: WIRE;
	w_anode951w[3..0]	: WIRE;
	w_anode961w[3..0]	: WIRE;
	w_anode971w[3..0]	: WIRE;
	w_anode981w[3..0]	: WIRE;
	w_anode991w[3..0]	: WIRE;
	w_data913w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1091w[3..3], w_anode1081w[3..3], w_anode1071w[3..3], w_anode1061w[3..3], w_anode1051w[3..3], w_anode1041w[3..3], w_anode1031w[3..3], w_anode1020w[3..3]), ( w_anode1001w[3..3], w_anode991w[3..3], w_anode981w[3..3], w_anode971w[3..3], w_anode961w[3..3], w_anode951w[3..3], w_anode941w[3..3], w_anode924w[3..3]));
	w_anode1001w[] = ( (w_anode1001w[2..2] & w_data913w[2..2]), (w_anode1001w[1..1] & w_data913w[1..1]), (w_anode1001w[0..0] & w_data913w[0..0]), w_anode915w[1..1]);
	w_anode1013w[] = ( (w_anode1013w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1020w[] = ( (w_anode1020w[2..2] & (! w_data913w[2..2])), (w_anode1020w[1..1] & (! w_data913w[1..1])), (w_anode1020w[0..0] & (! w_data913w[0..0])), w_anode1013w[1..1]);
	w_anode1031w[] = ( (w_anode1031w[2..2] & (! w_data913w[2..2])), (w_anode1031w[1..1] & (! w_data913w[1..1])), (w_anode1031w[0..0] & w_data913w[0..0]), w_anode1013w[1..1]);
	w_anode1041w[] = ( (w_anode1041w[2..2] & (! w_data913w[2..2])), (w_anode1041w[1..1] & w_data913w[1..1]), (w_anode1041w[0..0] & (! w_data913w[0..0])), w_anode1013w[1..1]);
	w_anode1051w[] = ( (w_anode1051w[2..2] & (! w_data913w[2..2])), (w_anode1051w[1..1] & w_data913w[1..1]), (w_anode1051w[0..0] & w_data913w[0..0]), w_anode1013w[1..1]);
	w_anode1061w[] = ( (w_anode1061w[2..2] & w_data913w[2..2]), (w_anode1061w[1..1] & (! w_data913w[1..1])), (w_anode1061w[0..0] & (! w_data913w[0..0])), w_anode1013w[1..1]);
	w_anode1071w[] = ( (w_anode1071w[2..2] & w_data913w[2..2]), (w_anode1071w[1..1] & (! w_data913w[1..1])), (w_anode1071w[0..0] & w_data913w[0..0]), w_anode1013w[1..1]);
	w_anode1081w[] = ( (w_anode1081w[2..2] & w_data913w[2..2]), (w_anode1081w[1..1] & w_data913w[1..1]), (w_anode1081w[0..0] & (! w_data913w[0..0])), w_anode1013w[1..1]);
	w_anode1091w[] = ( (w_anode1091w[2..2] & w_data913w[2..2]), (w_anode1091w[1..1] & w_data913w[1..1]), (w_anode1091w[0..0] & w_data913w[0..0]), w_anode1013w[1..1]);
	w_anode915w[] = ( (w_anode915w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode924w[] = ( (w_anode924w[2..2] & (! w_data913w[2..2])), (w_anode924w[1..1] & (! w_data913w[1..1])), (w_anode924w[0..0] & (! w_data913w[0..0])), w_anode915w[1..1]);
	w_anode941w[] = ( (w_anode941w[2..2] & (! w_data913w[2..2])), (w_anode941w[1..1] & (! w_data913w[1..1])), (w_anode941w[0..0] & w_data913w[0..0]), w_anode915w[1..1]);
	w_anode951w[] = ( (w_anode951w[2..2] & (! w_data913w[2..2])), (w_anode951w[1..1] & w_data913w[1..1]), (w_anode951w[0..0] & (! w_data913w[0..0])), w_anode915w[1..1]);
	w_anode961w[] = ( (w_anode961w[2..2] & (! w_data913w[2..2])), (w_anode961w[1..1] & w_data913w[1..1]), (w_anode961w[0..0] & w_data913w[0..0]), w_anode915w[1..1]);
	w_anode971w[] = ( (w_anode971w[2..2] & w_data913w[2..2]), (w_anode971w[1..1] & (! w_data913w[1..1])), (w_anode971w[0..0] & (! w_data913w[0..0])), w_anode915w[1..1]);
	w_anode981w[] = ( (w_anode981w[2..2] & w_data913w[2..2]), (w_anode981w[1..1] & (! w_data913w[1..1])), (w_anode981w[0..0] & w_data913w[0..0]), w_anode915w[1..1]);
	w_anode991w[] = ( (w_anode991w[2..2] & w_data913w[2..2]), (w_anode991w[1..1] & w_data913w[1..1]), (w_anode991w[0..0] & (! w_data913w[0..0])), w_anode915w[1..1]);
	w_data913w[2..0] = data_wire[2..0];
END;
--VALID FILE
